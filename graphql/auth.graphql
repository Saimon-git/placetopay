input LoginInput {
    username: String!
    password: String!
}

input RefreshTokenInput {
    refresh_token: String
}

type AuthPayload {
    access_token: String
    refresh_token: String
    expires_in: Int
    token_type: String
    user: User
}

type RefreshTokenPayload {
    access_token: String!
    refresh_token: String!
    expires_in: Int!
    token_type: String!
}

type LogoutResponse {
    status: String!
    message: String
}

type ForgotPasswordResponse {
    status: String!
    message: String
}

type RegisterResponse {
    tokens: AuthPayload
    status: RegisterStatuses!
}

type RemoveCompanyResponse {
    message: String
}

enum RegisterStatuses {
    MUST_VERIFY_EMAIL
    SUCCESS
}

input ForgotPasswordInput {
    email: String! @rules(apply: ["required", "email"])
}

input NewPasswordWithCodeInput {
    email: String! @rules(apply: ["required", "email"])
    token: String! @rules(apply: ["required", "string"])
    password: String! @rules(apply: ["required", "confirmed", "min:8"])
    password_confirmation: String!
}


input UpdatePasswordInput {
    old_password: String @rules(apply: ["required"])
    password: String @rules(apply: ["required", "confirmed", "min:8"])
    password_confirmation: String
}

input RegisterInput {
    first_name: String
    last_name: String
    city: String
    phone: String @rules(apply: ["required", "string"])
    username: String @rules(apply: ["required", "string", "unique:users,username"])
    email: String @rules(apply: ["required", "email", "unique:users,email"])
    password: String @rules(apply: ["required", "confirmed", "min:8"])
    gender: String @rules(apply: ["required"])
    uuid: String @rules(apply: ["required"]) @request
    location: String
    password_confirmation: String
    country: Int
    state: Int
    interests: [String]
}

input RegisterAdminInput {
    company: CompanyRelation
    first_name: String @rules(apply: ["required"])
    last_name: String @rules(apply: ["required"])
    username: String @rules(apply: ["required", "string", "unique:users,username"])
    email: String @rules(apply: ["required", "email", "unique:users,email"])
    phone: String
    extension: String
    password: String @rules(apply: ["required", "confirmed", "min:8"])
    password_confirmation: String
}

input UpdateLocationInput {
    city: String,
    country: CountryRelation,
    state: StateRelation
}

input SocialLoginInput {
    provider: String! @rules(apply: ["required"])
    token: String! @rules(apply: ["required"])
}

input VerifyEmailInput {
    token: String!
}

input UpdateProfileInput {
    first_name: String
    last_name: String
    phone: String
    extension: String
    country: Int
    state: Int
    city: String
    username: String
    email: String
    location: String
    height: String
    weight: String
    avatar: String
}

input JoinCompanyInput {
    wwid: String @rules(apply: ["required"])
}

input RemoveCompanyInput {
    company_id: Int
}
